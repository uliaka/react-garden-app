{"ast":null,"code":"var _jsxFileName = \"/home/uliana/react-garden-app/src/components/users/Users.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './Users.css';\nimport usersData from './UsersData';\nimport { UserContext } from '../../UserProvider.js';\n\nclass User extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"user_block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.data.name), React.createElement(\"span\", {\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" \", this.props.data.age, \" years old\"), React.createElement(\"span\", {\n      className: \"role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.data.role));\n  }\n\n}\n\nfunction SortButton(props) {\n  return React.createElement(\"button\", {\n    onClick: props.sortOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.title);\n}\n\nfunction UserList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Users list \"), React.createElement(\"div\", {\n    className: \"sort-button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(SortButton, {\n    sortOnClick: props.sortUsersByName,\n    title: \"Sort by name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(SortButton, {\n    sortOnClick: props.sortUsersByAge,\n    title: \"Sort by age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), props.users.map(item => React.createElement(User, {\n    data: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}\n\nfunction PagePagination(props) {\n  const pages = [];\n\n  for (let i = 1; i <= props.pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, pages.map(p => React.createElement(\"span\", {\n    className: p === props.activePage ? 'active-page' : 'page',\n    onClick: () => {\n      props.setActivePage(p);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, p)));\n}\n\nconst config = {\n  usersPerPage: 4\n};\n\nclass UserGenery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: usersData,\n      pagesCount: this.calculatePageCount(usersData.length, config.usersPerPage),\n      activePage: 1\n    };\n  }\n\n  calculatePageCount(usersLen, usersPerPage) {\n    return Math.floor(usersLen / usersPerPage) + 1;\n  }\n\n  activePageUsers(users, activePageNumber, usersPerPage) {\n    const lastUserIndex = activePageNumber * usersPerPage;\n    const firstUserIndex = lastUserIndex - usersPerPage;\n    return users.slice(firstUserIndex, lastUserIndex);\n  }\n\n  setActivePage(newActivePageNumber) {\n    this.setState({\n      activePage: newActivePageNumber\n    });\n  }\n\n  sortUsersByName() {\n    const users = this.state.users;\n    const sortedUsers = users.sort((a, b) => a.name > b.name ? 1 : -1);\n    this.setState({\n      users: sortedUsers\n    });\n  }\n\n  sortUsersByAge() {\n    const users = this.state.users;\n    const sortedUsers = users.sort((a, b) => a.age > b.age ? 1 : -1);\n    this.setState({\n      users: sortedUsers\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          activePage = _this$state.activePage,\n          pagesCount = _this$state.pagesCount;\n    return React.createElement(UserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, ({\n      users\n    }) => React.createElement(\"div\", {\n      className: \"user-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(UserList, {\n      users: this.activePageUsers(users, activePage, config.usersPerPage),\n      sortUsersByName: this.sortUsersByName.bind(this),\n      sortUsersByAge: this.sortUsersByAge.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"padding-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(PagePagination, {\n      pagesCount: pagesCount,\n      activePage: activePage,\n      setActivePage: this.setActivePage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UserGenery;","map":{"version":3,"sources":["/home/uliana/react-garden-app/src/components/users/Users.js"],"names":["React","axios","usersData","UserContext","User","Component","render","props","data","name","age","role","SortButton","sortOnClick","title","UserList","sortUsersByName","sortUsersByAge","users","map","item","PagePagination","pages","i","pagesCount","push","p","activePage","setActivePage","config","usersPerPage","UserGenery","constructor","state","calculatePageCount","length","usersLen","Math","floor","activePageUsers","activePageNumber","lastUserIndex","firstUserIndex","slice","newActivePageNumber","setState","sortedUsers","sort","a","b","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './Users.css';\nimport usersData from './UsersData'\nimport { UserContext } from '../../UserProvider.js'\n\n\nclass User extends React.Component {\n  render() {\n    return (\n      <div className=\"user_block\">\n        <h1>{this.props.data.name}</h1>\n        <span className=\"age\"> {this.props.data.age} years old</span>\n        <span className=\"role\">{this.props.data.role}</span>\n      </div>\n    )\n  }\n}\n\nfunction SortButton(props) {\n  return (\n      <button onClick={props.sortOnClick}>{props.title}</button>\n  )\n}\n\nfunction UserList(props) {\n  return (\n    <div>\n      <h1> Users list </h1>\n      <div className=\"sort-button-container\">\n        <SortButton sortOnClick={props.sortUsersByName} title=\"Sort by name\"/>\n        <SortButton sortOnClick={props.sortUsersByAge} title=\"Sort by age\"/>\n      </div>\n     {props.users.map(item => <User data={item}/>)}\n    </div>\n  )\n}\n\nfunction PagePagination(props) {\n  const pages = [];\n  for(let i = 1; i <= props.pagesCount; i++) {\n    pages.push(i);\n  }\n  return (\n    <div>\n      {pages.map((p) => (\n        <span\n          className={p === props.activePage ? 'active-page' : 'page'}\n          onClick={() => {props.setActivePage(p)}}>\n          {p}\n        </span>\n      ))}\n    </div>\n  )\n}\n\nconst config = {\n  usersPerPage: 4,\n}\n\n\nclass UserGenery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: usersData,\n      pagesCount: this.calculatePageCount(usersData.length, config.usersPerPage),\n      activePage: 1,\n    }\n  }\n\n  calculatePageCount(usersLen, usersPerPage) {\n    return Math.floor(usersLen / usersPerPage) + 1;\n  }\n\n  activePageUsers(users, activePageNumber, usersPerPage) {\n    const lastUserIndex = activePageNumber * usersPerPage;\n    const firstUserIndex = lastUserIndex - usersPerPage;\n    return users.slice(firstUserIndex, lastUserIndex)\n  }\n\n  setActivePage(newActivePageNumber) {\n    this.setState({\n      activePage: newActivePageNumber,\n    })\n  }\n\n  sortUsersByName() {\n    const users = this.state.users;\n    const sortedUsers = users.sort((a, b) => a.name > b.name ? 1 : -1)\n    this.setState({ users: sortedUsers })\n  }\n\n  sortUsersByAge() {\n    const users = this.state.users;\n    const sortedUsers = users.sort((a, b) => a.age > b.age ? 1 : -1)\n    this.setState({ users: sortedUsers })\n  }\n\n\n  render() {\n    const { activePage, pagesCount } = this.state;\n    return (\n      <UserContext.Consumer>\n        {({ users }) => (\n          <div className=\"user-list-container\">\n            <UserList\n              users={this.activePageUsers(users, activePage, config.usersPerPage)}\n              sortUsersByName={this.sortUsersByName.bind(this)}\n              sortUsersByAge={this.sortUsersByAge.bind(this)}\n            />\n            <div className=\"padding-container\">\n              <PagePagination\n                pagesCount={pagesCount}\n                activePage={activePage}\n                setActivePage={this.setActivePage.bind(this)}\n              />\n            </div>\n         </div>\n        )}\n      </UserContext.Consumer>\n    )\n  }\n}\n\nexport default UserGenery\n"]},"metadata":{},"sourceType":"module"}