{"ast":null,"code":"var _jsxFileName = \"/home/uliana/react-garden-app/client/src/TaskList.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Task extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, \" \", this.props.data.taskName, \" \");\n  }\n\n}\n\nfunction TaskList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" This is task list \"), props.tasks.map(item => React.createElement(Task, {\n    data: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n}\n\nclass AddTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      taskText: null\n    };\n  }\n\n  onButtonClick() {\n    const text = this.state.taskText;\n    this.props.onTaskAdd({\n      taskName: text\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      taskText: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.inputRef,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.onButtonClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Add task \"));\n  }\n\n}\n\nclass TaskApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('did mount!!!!!!!!!');\n    setTimeout(() => {\n      this.setState({\n        taskList: [{\n          taskName: 'To have dinner'\n        }, {\n          taskName: 'To visit gum'\n        }, {\n          taskName: 'To meet friend'\n        }, {\n          taskName: 'To do homework'\n        }, {\n          taskName: 'To visit cheach'\n        }, {\n          taskName: 'To go shopping'\n        }]\n      });\n    }, 3000);\n  }\n\n  addTask(task) {\n    this.setState({\n      taskList: this.state.taskList.concat([task])\n    });\n  }\n\n  render() {\n    console.log('rendering method!!!!!!!!!!!');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(AddTaskForm, {\n      onTaskAdd: task => {\n        this.addTask(task);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: this.state.taskList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TaskApp;","map":{"version":3,"sources":["/home/uliana/react-garden-app/client/src/TaskList.js"],"names":["React","axios","Task","Component","render","props","data","taskName","TaskList","tasks","map","item","AddTaskForm","constructor","inputRef","createRef","state","taskText","onButtonClick","text","onTaskAdd","handleChange","event","setState","target","value","bind","TaskApp","taskList","componentDidMount","console","log","setTimeout","addTask","task","concat"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Task extends React.Component {\n  render() {\n    return <div> {this.props.data.taskName} </div>\n  }\n}\n\nfunction TaskList(props) {\n  return (\n    <div>\n      <h1> This is task list </h1>\n     {props.tasks.map(item => <Task data={item}/>)}\n    </div>\n  )\n}\n\nclass AddTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      taskText: null\n    }\n  }\n  onButtonClick() {\n    const text = this.state.taskText;\n    this.props.onTaskAdd({ taskName: text });\n  }\n\n  handleChange(event) {\n    this.setState({ taskText: event.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          ref={this.inputRef}\n          onChange={this.handleChange.bind(this)}\n        />\n        <button onClick={() => {this.onButtonClick()}}> Add task </button>\n      </div>\n    )\n  }\n}\n\nclass TaskApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    }\n  }\n\n  componentDidMount() {\n    console.log('did mount!!!!!!!!!')\n    setTimeout(() => {\n      this.setState(\n        {taskList: [\n                { taskName: 'To have dinner' },\n                { taskName: 'To visit gum' },\n                { taskName: 'To meet friend' },\n                { taskName: 'To do homework' },\n                { taskName: 'To visit cheach' },\n                { taskName: 'To go shopping' }\n              ]\n        })\n\n\n    }, 3000)\n  }\n  addTask(task) {\n    this.setState({\n      taskList: this.state.taskList.concat([task]),\n    })\n  }\n\n  render() {\n    console.log('rendering method!!!!!!!!!!!')\n    return (\n      <div>\n        <AddTaskForm onTaskAdd={(task) => { this.addTask(task)}}/>\n        <TaskList tasks={this.state.taskList}/>\n      </div>\n    )\n  }\n}\n\n\n\nexport default TaskApp;\n"]},"metadata":{},"sourceType":"module"}